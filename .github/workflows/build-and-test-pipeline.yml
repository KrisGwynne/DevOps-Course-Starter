name: Continuous Integration
on:
  push:
    paths-ignore:
      - '**.md'
      - 'documentation/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'documentation/**'
jobs: 
  test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: docker build --target test --tag todo-app:test .
    - run: docker run todo-app:test tests
    - run: docker run -e CONNECTION_STRING="${{ secrets.DB_CONNECTION_STRING }}" -e SECRET_KEY=${{ secrets.SECRET_KEY }} -e LOGIN_DISABLED=True todo-app:test e2e_tests
  publish: 
    name: Build and Publish to Dockerhub
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - run: docker build --target production --tag ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest .
      - run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest
  terraform:
    name: Run terraform to create Azure Resources
    env: 
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_prefix: 'prod'
      TF_VAR_github_client_id: ${{ secrets.GITHUB_CLIENT_ID }}
      TF_VAR_github_client_secret: ${{ secrets.GITHUB_CLIENT_SECRET }}
      TF_VAR_flask_secret_key: ${{ secrets.SECRET_KEY }}
      TF_VAR_flask_env: 'production'
      TF_VAR_docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - uses: actions/checkout@v2
    - run: terraform init
    - run: terraform apply -auto-approve
    - run: curl --fail -dH -X POST "$(terraform output -raw azure_webhook_url)"
